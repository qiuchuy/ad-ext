// Copyright 2020 The IREE Authors
//
// Licensed under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

namespace iree.hal.metal;

// 'Metal Executable'.
file_identifier "MTLE";
file_extension "mtle";

// A struct for Metal threadgroup size along each dimension.
struct ThreadgroupSize {
  x:uint32;
  y:uint32;
  z:uint32;
}

// A Metal shader library and runtime pipeline state description.
// This information is used to create MTLLibrary, MTLFunction and pipeline
// state objects.
table ExecutableDef {
  // A map of entry point ordinals to string names as used in the shader
  // library.
  entry_points:[string];

  // Threadgroup sizes for each entry point.
  //
  // We need this because workgroup size is directly baked inside SPIR-V code,
  // but in Metal it's specified when dispatching workload. So when cross
  // compiling SPIR-V to MSL, we need to persist the information here so that
  // later it can be used for dispatching.
  // TODO(antiagainst): support SPIR-V specialization constant.
  threadgroup_sizes:[ThreadgroupSize];

  // Shader content can be provided as either a serialized library or in the
  // form of source code strings.

  // Serialized Metal shader library.
  // TODO(#14047): enable linking and consolidate into one library.
  shader_libraries:[string];
  // Original Metal shader source code.
  shader_sources:[string];
}

root_type ExecutableDef;
