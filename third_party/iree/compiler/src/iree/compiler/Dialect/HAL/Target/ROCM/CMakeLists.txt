################################################################################
# Autogenerated by build_tools/bazel_to_cmake/bazel_to_cmake.py from           #
# compiler/src/iree/compiler/Dialect/HAL/Target/ROCM/BUILD.bazel               #
#                                                                              #
# Use iree_cmake_extra_content from iree/build_defs.oss.bzl to add arbitrary   #
# CMake-only content.                                                          #
#                                                                              #
# To disable autogeneration for this file entirely, delete this header.        #
################################################################################

if(NOT IREE_TARGET_BACKEND_ROCM)
  return()
endif()

iree_add_all_subdirs()

iree_cc_library(
  NAME
    ROCM
  HDRS
    "ROCMTarget.h"
  SRCS
    "ROCMTarget.cpp"
    "ROCMTargetUtils.cpp"
  DEPS
    LLVMAMDGPUCodeGen
    LLVMCore
    LLVMIRReader
    LLVMLinker
    LLVMMC
    LLVMSupport
    LLVMTarget
    LLVMipo
    MLIRBuiltinToLLVMIRTranslation
    MLIRLLVMDialect
    MLIRLLVMToLLVMIRTranslation
    MLIRPass
    MLIRROCDLDialect
    MLIRROCDLToLLVMIRTranslation
    MLIRSupport
    MLIRTargetLLVMIRExport
    iree::compiler::Codegen::Dialect::IREECodegenDialect
    iree::compiler::Codegen::LLVMGPU
    iree::compiler::Dialect::HAL::Target
    iree::compiler::Utils
    iree::schemas::rocm_executable_def_c_fbs
  PUBLIC
)

### BAZEL_TO_CMAKE_PRESERVES_ALL_CONTENT_BELOW_THIS_LINE ###

# Query for list of device libs to build.
get_property(AMD_DEVICE_LIBS GLOBAL PROPERTY AMD_DEVICE_LIBS)
set(AMD_REQUIRED_LIBS "ocml" "ockl" "opencl")

set(_platform_lib_reldir "iree_platform_libs/rocm")
file(MAKE_DIRECTORY "${IREE_COMPILER_DYLIB_DIR}/${_platform_lib_reldir}")

# Transform device lib targets to the generated bc file of each.
set(_all_device_bc_deps)
set(_all_device_bc_copy_commands)
set(_all_device_bc_files)
foreach (_device_lib_target ${AMD_REQUIRED_LIBS})
  get_target_property(_device_basename ${_device_lib_target} ARCHIVE_OUTPUT_NAME)
  get_target_property(_device_output_path ${_device_lib_target} OUTPUT_NAME)
  set(_device_bc_relpath "${_platform_lib_reldir}/${_device_basename}.bc")

  # Note this bc file as being part of the bundle that must be included with
  # the compiler dylib.
  set_property(GLOBAL APPEND PROPERTY IREE_COMPILER_DYLIB_RELPATHS "${_device_bc_relpath}")

  list(APPEND _all_device_bc_deps "${_device_bc_path}")
  list(APPEND _all_device_bc_files "${IREE_COMPILER_DYLIB_DIR}/${_device_bc_relpath}")

  # Copy to lib/ tree.
  list(APPEND _all_device_bc_copy_commands
    COMMAND ${CMAKE_COMMAND} -E copy 
      "${_device_output_path}" 
      "${IREE_COMPILER_DYLIB_DIR}/${_device_bc_relpath}"
  )
endforeach()

# Generate a custom target with all file level dependencies and commands to
# copy to our build tree locations.
# Our GenDeviceLibs target depends on all of the defined device lib targets.
add_custom_command(
  OUTPUT ${_all_device_bc_files}
  DEPENDS ${_all_device_bc_deps}
  POST_BUILD
    ${_all_device_bc_copy_commands}
)
add_custom_target(iree_compiler_Dialect_HAL_Target_ROCM_GenDeviceLibs
  DEPENDS
    # Must depend on both the targets and the bc files in order for the
    # transitive dep to work.
    ${AMD_DEVICE_LIBS}
    ${_all_device_bc_files}
)

# Ensure that the device libs are built when the compiler dylib is built.
set_property(GLOBAL APPEND PROPERTY IREE_COMPILER_DYLIB_DEPENDS 
  iree_compiler_Dialect_HAL_Target_ROCM_GenDeviceLibs)

# Install.
install(FILES ${_all_device_bc_files} 
  DESTINATION "${IREE_COMPILER_DYLIB_INSTALL_PREFIX}/${_platform_lib_reldir}")
