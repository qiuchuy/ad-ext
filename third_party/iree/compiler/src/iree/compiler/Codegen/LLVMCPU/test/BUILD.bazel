# Copyright 2019 The IREE Authors
#
# Licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

# Tests for common transforms.

load("//build_tools/bazel:iree_lit_test.bzl", "iree_lit_test_suite")
load("//build_tools/bazel:enforce_glob.bzl", "enforce_glob")

package(
    features = ["layering_check"],
    licenses = ["notice"],  # Apache 2.0
)

iree_lit_test_suite(
    name = "lit",
    srcs = enforce_glob(
        # keep sorted
        [
            "aarch64_dotprod_vector_lowering.mlir",
            "aarch64_vector_lowering.mlir",
            "apply_scale_lowering.mlir",
            "assign_constant_ordinals.mlir",
            "assign_import_ordinals.mlir",
            "check_ir_before_llvm_conversion.mlir",
            "check_ir_before_llvm_conversion_not_fail_unbound.mlir",
            "convert_to_llvm.mlir",
            "data_tiling_pipeline.mlir",
            "emit_vectorization_remarks.mlir",
            "expand_f16_op_to_f32.mlir",
            "hal_executable_constants.mlir",
            "hal_interface_bindings.mlir",
            "hal_interface_constants.mlir",
            "hal_interface_workgroup_info.mlir",
            "illegal_configuration.mlir",
            "lower_to_ukernel_ops.mlir",
            "materialize_aarch64_launch_configuration.mlir",
            "materialize_configuration_without_distribution.mlir",
            "materialize_encoding.mlir",
            "materialize_riscv_launch_configuration.mlir",
            "materialize_vmvx_launch_configuration.mlir",
            "materialize_x86_64_launch_configuration.mlir",
            "pad_conv_pipeline_tests.mlir",
            "pad_pipeline_tests.mlir",
            "peel.mlir",
            "peel_and_vectorize.mlir",
            "pipeline_tests.mlir",
            "scalable_tile_and_vectorize_matmul.mlir",
            "split_reduction.mlir",
            "split_reduction_pipeline_tests.mlir",
            "synchronize_symbol_visibility.mlir",
            "tensor_pad.mlir",
            "test_config_mmt4d.mlir",
            "tile.mlir",
            "tile_and_fuse.mlir",
            "transform_dialect_bufferize.mlir",
            "transform_dialect_iree_tile_to_forall.mlir",
            "transpose_avx2_lowering.mlir",
            "unfused_fma.mlir",
            "vector_contract_to_arm_asm.mlir",
            "vector_contract_to_arm_intrinsics.mlir",
            "vector_lowering.mlir",
            "vector_masking.mlir",
            "vectorize_nd_extract.mlir",
            "verify_linalg_transform_legality.mlir",
        ],
        include = ["*.mlir"],
    ),
    cfg = "//compiler:lit.cfg.py",
    tools = [
        "//tools:iree-compile",
        "//tools:iree-opt",
        "@llvm-project//llvm:FileCheck",
    ],
)
